
<Window x:Class="bfs.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:bfs"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Background="Beige">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <TextBox Name="rows_matrix"  Background="Chocolate" Width="30" Height="30" Margin="0,0,170,50" />
        <TextBox Name="matrix_ad"  Background="Chocolate" Width="200" Height="200" VerticalAlignment="Bottom" />
        <Button Name="output_matrix" Click="output_matrix_Click" Grid.Column="1" Width="200" Height="60" Content="Прочитать граф" Margin="0 110 0 240" FontFamily="Times New Roman" FontSize="23" Background="Bisque" />
        <Button Name="enter_matrix"   Grid.Column="1" Width="200" Height="60" Content="Новая строка" Click="enter_matrix_Click" Margin="0,55,0,0" FontFamily="Times New Roman" FontSize="23" Background="Bisque" />
        <Button Name="put_matrix" Click="put_matrix_Click" Grid.Column="1" Width="200" Height="60" Content="Матрица из графа" Margin="0,0,0,300" FontFamily="Times New Roman" FontSize="23" Background="Bisque" />
        <Button Name="steret"   Grid.Column="1" Width="200" Height="60" Content="Стереть" Click="steret_Click"  Margin="0,240,0,0" FontFamily="Times New Roman" FontSize="23" Background="LightGray" />
        <Button Name="exit"   Grid.Column="1" Width="70" Height="30" Content="Выход" Click="exit_Click"  Margin="303.2,380,23.6,10" FontFamily="Times New Roman" FontSize="20" Background="Tomato" />
    </Grid>
</Window>
















using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace bfs
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
       
        public int N;
        private void output_matrix_Click(object sender, RoutedEventArgs e)
        {
            N = Int32.Parse(rows_matrix.Text);
            int[,] matrix = new int[N, N];
            string[] input_matrix = matrix_ad.Text.Split('\n');
            string[] qq;
            for (int i = 0; i < N; i++)
            {
                qq = input_matrix[i].Split(' ');
                for (int j = 0; j < N; j++)
                {
                    matrix[i, j] = int.Parse(qq[j]);
                }

            }
            int[] uses = new int[N];
            List<int> nodes = new List<int>();
            Queue<int> queue = new Queue<int>();
            queue.Enqueue(0);
            uses[0] = 1;
            while(queue.Count > 0)
            {
                int node = queue.First();
                queue.Dequeue();
                uses[node] = 2;
                for(int j = 0;j<N; j++)
                {
                    if(matrix[node,j] == 1 && uses[j]==0)
                    {
                        queue.Enqueue(j);
                        uses[j] = 1;
                    }
                }
                nodes.Add(node+1);
            }
            string s = "";
            for (int i = 0; i < nodes.Count; i++)
            {
                s += nodes[i].ToString() + " ";
            }
            MessageBox.Show(s);
            //printMas(matrix);
        }


        private void put_matrix_Click(object sender, RoutedEventArgs e)
        {
            StreamReader file = new StreamReader("input.txt");
            string s = file.ReadToEnd();
            file.Close();
            string[] str = s.Split('\n');
            string[] col = str[0].Split(' ');
            int[,] a = new int[str.Length, col.Length];
            int t = 0;
            for (int i = 0; i < str.Length; i++)
            {
                col = str[i].Split(' ');
                for (int j = 0; j < col.Length; j++)
                {
                    t = Convert.ToInt32(col[j]);
                    a[i, j] = t;

                }
            }
            N = str.Length;
            int[] uses = new int[N];
            List<int> nodes2 = new List<int>();
            Queue<int> queue = new Queue<int>();
            queue.Enqueue(0);
            uses[0] = 1;
            while (queue.Count > 0)
            {
                int node = queue.First();
                queue.Dequeue();
                uses[node] = 2;
                for (int j = 0; j < N; j++)
                {
                    if (a[node, j] == 1 && uses[j] == 0)
                    {
                        queue.Enqueue(j);
                        uses[j] = 1;
                    }
                }
                nodes2.Add(node+1);
            }


            string ss = "";
            for (int i = 0; i < nodes2.Count; i++)
            {
                ss += nodes2[i].ToString()+ " ";
            }
            printResult(ss);
        }

        

        public void printResult(string result)
        {
            using (StreamWriter stream = new StreamWriter("output.txt", false))
            {
                stream.WriteLine(result);
            }
            MessageBox.Show("Решение записано в файл!");
        }

        private void enter_matrix_Click(object sender, RoutedEventArgs e)
        {
            matrix_ad.Text += '\n';
        }

        private void steret_Click(object sender, RoutedEventArgs e)
        {
            matrix_ad.Text = "";
            rows_matrix.Text = "";
        }

        private void exit_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
    }

}
