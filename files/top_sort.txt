<Window x:Class="top_sort.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:top_sort"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Background="SeaShell">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TextBlock VerticalAlignment="Top" Margin="90,55,0,0" FontFamily="Times New Roman" FontSize="15" Grid.ColumnSpan="2" >Кол-во</TextBlock>
        <TextBlock VerticalAlignment="Top" Margin="90,73,0,0" FontFamily="Times New Roman" FontSize="15" Grid.ColumnSpan="2">вершин:</TextBlock>
        <TextBox Name="vertex_matrix"  Background="BurlyWood" Width="30" Height="30" VerticalAlignment="Top" Margin="150,60,208,0" FontFamily="Times New Roman" FontSize="30" />

        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Margin="200,55,120,0" FontFamily="Times New Roman" FontSize="15">Кол-во</TextBlock>
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Margin="200,73,120,0" FontFamily="Times New Roman" FontSize="15">ребер:</TextBlock>
        <TextBox Name="edges_matrix"  Background="BurlyWood"  Width="30" Height="30" VerticalAlignment="Top" Margin="170,60,0,0" FontFamily="Times New Roman" FontSize="30" />

        <TextBox Name="matrix_form"  Background="BurlyWood"  Width="200" Height="200" VerticalAlignment="Center" />


        <Button Name="result_matrix_form" Click="result_matrix_form_Click" Background="PowderBlue"  Width="120" Height="40"  Grid.Column="1" Margin="0,0,0,344" Content="Решить" HorizontalAlignment="Center" FontFamily="Times New Roman" FontSize="23" />
        <Button Name="enter_clc" Click="enter_clc_Click" Background="PowderBlue" Grid.Column="1" Width="250" Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Перейти на след строку" FontFamily="Times New Roman" FontSize="23" Margin="0,0,0,80" />
        <Button Name="result_matrix_file" Click="result_matrix_file_Click" Background="PowderBlue" Grid.Column="1" Height="40" Width="210" Content="Посчитать из файла" Margin="0,0,0,220" HorizontalAlignment="Center" FontFamily="Times New Roman" FontSize="23"/>
        <Button Name="steret" Click="steret_Click"  Background="Lavender"  Grid.Column="1" Height="40" Width="150" Content="Стереть" Margin="0,120,0,0" HorizontalAlignment="Center" FontFamily="Times New Roman" FontSize="23" />
        <Button Name="exit" Click="exit_Click"  Background="Salmon"  Grid.Column="1" Height="40" Width="150" Content="Закрыть" Margin="0,250,0,0" HorizontalAlignment="Center" FontFamily="Times New Roman" FontSize="23" />
    </Grid>
</Window>



using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace top_sort
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
        private void enter_clc_Click(object sender, RoutedEventArgs e)
        {
            matrix_form.Text += '\n';
        }



        public int N; //кол-во вершин
        public int M; //кол-во ребер
        public int[] ans;
        public bool[] vs;
        private void result_matrix_form_Click(object sender, RoutedEventArgs e)
        {
            N = Int32.Parse(vertex_matrix.Text);
            M = Int32.Parse(edges_matrix.Text);
            int[,] matrix = new int[N, N];
            string[] input_matrix = matrix_form.Text.Split('\n');
            string[] qq;
            for (int i = 0; i < M; i++)
            {
                qq = input_matrix[i].Split(' ');
                int a = int.Parse(qq[0]) - 1;
                int b = int.Parse(qq[1]) - 1;
                matrix[a, b] = 1;
                matrix[b, a] = 1;

            }
            vs = new bool[N];
            ans = new int[N];
            DFS(0, matrix, vs, ans);
            string n = "";
            for (int i = 0; i < ans.Length; i++)
                n += $"{ans[i]} ";
            MessageBox.Show(n);
        }
        public int cht = 0;

        public void DFS(int v, int[,] mas, bool[] vs, int[] ans)
        {
            vs[v] = true;
            for(int i =0; i < N; i++)
            {
                if (mas[v,i]>0 && !vs[i])
                {
                    DFS(i, mas,vs, ans);
                }
            }
            ans[cht++] = v;
        }

        private void result_matrix_file_Click(object sender, RoutedEventArgs e)
        {
            StreamReader file = new StreamReader("input.txt");
            string s = file.ReadToEnd();
            file.Close();
            string[] str = s.Split('\n');
            string[] col = str[0].Split(' ');
            N = int.Parse(col[0]);
            M = int.Parse(col[1]);
            int[,] m = new int[N, N];
            for (int i = 1; i <= M; i++)
            {
                col = str[i].Split(' ');
                int a = int.Parse(col[0]) - 1;
                int b = int.Parse(col[1]) - 1;
                m[a, b] = 1;
                m[b, a] = 1;
            }
            vs = new bool[N];
            ans = new int[N];
            DFS(0, m, vs, ans);
            string n = "";
            for (int i = 0; i < ans.Length; i++)
                n += $"{ans[i]+1} ";
            MessageBox.Show(n);
        }
        public void printRes(string res)
        {
            using (StreamWriter stream = new StreamWriter("output.txt", false))
            {
                stream.WriteLine(res);
            }
            MessageBox.Show("Решение записано в файл!");
        }

        private void steret_Click(object sender, RoutedEventArgs e)
        {
            vertex_matrix.Text = "";
            edges_matrix.Text = "";
            matrix_form.Text = "";
        }

        private void exit_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
    }
}
